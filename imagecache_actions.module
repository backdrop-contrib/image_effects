<?php

/**
 * @file Home for the most basic imagecache_action routines.
 */

/**
 * Implements hook_menu().
 */
function imagecache_actions_menu() {
  $items = array();
  $items['admin/config/media/image-styles/duplicate/%image_style'] = array(
    'title' => 'Duplicate style',
    'description' => 'Make a copy of an image style.',
    'page callback' => 'imagecache_actions_style_duplicate_page_callback',
    'page arguments' => array(5),
    'access arguments' => array('administer image styles'),
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function imagecache_actions_theme() {
  return array(
    'imagecacheactions_rgb_form' => array(
      'file' => 'utility-color.inc',
      'render element' => 'form',
    ),
    'imagecacheactions_rgb' => array(
      'file' => 'utility-color.inc',
      'variables' => array('rgb' => NULL),
    ),
  );
}

/**
* Implements hook_stream_wrappers().
*/
function imagecache_actions_stream_wrappers() {
  $wrappers = array(
    'module' => array(
      'name' => t('Module files (read-only)'),
      'class' => 'ImageCacheActionsModuleStreamWrapper',
      'description' => t('Module files (read-only).'),
      'type' => STREAM_WRAPPERS_LOCAL | STREAM_WRAPPERS_READ_VISIBLE,
    ),
  );
  return $wrappers;
}

/**
 * Menu callback: Duplicates an image style and redirects to the image styles
 * overview page.
 *
 * @param array $style
 *   An image style array.
 *
 * @see image_style_name_validate()
 */
function imagecache_actions_style_duplicate_page_callback($style) {
  imagecache_actions_style_duplicate($style);
  drupal_goto('admin/config/media/image-styles');
}

/**
 * Duplicates an image style and saves it.
 *
 * @param array $style
 *   An image style array.
 *
 * @return array
 *   An image style array with the newly created copy of the given style.
 *
 * @see image_style_name_validate()
 */
function imagecache_actions_style_duplicate($style) {
  // Find a unique name for copy.
  // Step 1: Find the base: name without things like '-copy' or '-copy-1'
  $style_name_base = $style['name'];
  if (preg_match('/-copy(-\d+)?$/', $style_name_base)) {
    $style_name_base = substr($style_name_base, 0, strpos($style_name_base, '-copy'));
  }

  // Step 2: Add -copy, -copy-1, -copy-2, ... to the base name until we have a
  // not already existing name.
  $i = 0;
  $style_name = $style_name_base . '-copy';
  $styles = image_styles();
  while (isset($styles[$style_name])) {
    $i++;
    $style_name = $style_name_base . '-copy-' . $i;
  }
  $style['name'] = $style_name;

  // Unset isid to save it as a new style.
  unset($style['isid']);
  $style = image_style_save($style);

  // Save copies of each effect with the new image style ID (isid).
  foreach ($style['effects'] as &$effect) {
    // Unset ieid to save it as a new effect.
    unset($effect['ieid']);
    $effect['isid'] = $style['isid'];
    $effect = image_effect_save($effect);
  }

  return $style;
}

/**
 * Implements hook_preprocess_HOOK for theme image_style_list.
 */
function imagecache_actions_preprocess_image_style_list(&$variables) {
  // Tell imagecache_actions_preprocess_image_style_list to preprocess the next
  // call to theme_table()
  $flag = TRUE;
  imagecache_actions_preprocess_table($flag);
}

/**
 * Implements hook_preprocess_HOOK for theme table.
 */
function imagecache_actions_preprocess_table(&$variables) {
  static $is_in_image_style_list = FALSE;

  if (is_bool($variables)) {
    // Called from imagecache_actions_style_duplicate(): set flag
    $is_in_image_style_list = $variables;
  }
  else if ($is_in_image_style_list) {
    // Normal preprocess hook call: only process if theme('table', ...) has been
    // called by theme_image_style_list()
    $variables['header'][2]['colspan'] = 4;
    foreach ($variables['rows'] as &$row) {
      array_splice($row, 2, 0, array($row[2]));
      // Replace edit with duplicate in text and href
      $row[3] = str_replace('>' . t('edit') . '<', '>' . t('duplicate') . '<', $row[3]);
      $row[3] = preg_replace('/\/edit\/([-a-z0-9_]+)"/', '/duplicate/\1"', $row[3]);
    }
    // Don't preprocess subsequent calls to theme_table().
    $is_in_image_style_list = FALSE;
  }
}
